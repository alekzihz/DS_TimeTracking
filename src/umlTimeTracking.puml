@startuml
'https://plantuml.com/class-diagram



class Client{
    -task: Task
    -project: Project

}
abstract Component{
    {abstract}-initialDate: LocalDateTime
    {abstract}-finalDate: LocalDateTime
    {abstract}- tagName: String
    {abstract}- duration: LocalDateTime


     #createProject()
     #createTask()
     +toString()

}
class Project{
    {abstract}-initialDate: LocalDateTime
    {abstract}-finalDate: LocalDateTime
    {abstract}- tagName: String
    {abstract}- duration: LocalDateTime
    #createProject()
    -calculateDuration():void
    -Project(tag: String)
    +toString()


}



class Task {
    -tagName: String
    -intervalList:List <interval>
    #createTask()
    -Task(tag: String)
    -startTask()
    -stopTask()
    +toString()



}
class interval{
    -finalDate:LocalDateTime
    -initialDate:LocalDateTime
    -Duration:LocalDateTime
    +getFinalDate()
    +getInitialDate()
    +getDuration()

}

package java.util{
    Abstract Observable
    {
       +addObserver(ob: Observer)
       +deleteObserver(ob: Observer)
       +notifyObserver(arg0: Observable, arg1:Object)
    }

    interface Observer {

        +update(arg0: Observable, arg1: Object)

}
}

class Time {
    -time: Timer
    -dateTime: LocalDateTime
    +startTimer()
}

Client --|> Component:component
Project *--> "*"Component:children

Component <|--down(Project,Task)
Observable<--Time
Observer<..interval
Observable*--left>"*"Observer:observers
Task "1..n"--> interval:interval


@enduml