@startuml
'https://plantuml.com/class-diagram



class main{
  main(String[] args):void

  --

}
abstract Component{
    {abstract}-initialDate: LocalDateTime
    {abstract}-finalDate: LocalDateTime
    {abstract}- tagName: String
    {abstract}- duration: LocalDateTime
    {abstract}-calculateDuration():void
    {abstract}-updateDate():void


     #createProject()
     #createTask()
     +toString()

}
class Project{
    {abstract}-initialDate: LocalDateTime
    {abstract}-finalDate: LocalDateTime
    {abstract}- tagName: String
    {abstract}- duration: LocalDateTime
    #createProject()

    -Project(tag: String)
    +toString()

}

class Task {
    -tagName: String
    -intervalList:List <interval>
    #createTask()
    -Task(tag: String)
    -startTask()
    -stopTask()
    +toString()
    +getName()

}
class interval{
    -task: Task
    -finalDate:LocalDateTime
    -initialDate:LocalDateTime
    -Duration:Double
    +getFinalDate()
    +getInitialDate()
    +getDuration()
    +setFinalDate(dateFinal: LocalDateTime)
    +setInitialDate(dateInitial: LocalDateTime)
    +setDuration(duration: Double)

}

package java.util{

    interface Observer {

        +{abstract}update(arg0: Observable, arg1: Object)

    }

    Abstract Observable
    {
       +{abstract}addObserver(ob: Observer)
       +{abstract}deleteObserver(ob: Observer)
       +{abstract}notifyObserver(arg0: Observable, arg1:Object)
    }



}

class Time {
    -time: Timer
    -dateTime: LocalDateTime
    +startTimer()
}

main"1..n"--> Component
Project *--> "*"Component:children

Component <|--down(Project,Task)

Time--|> Observable
interval ..|> Observer
Observable*--left>"*"Observer:observers
Task "1..n"--> interval:interval


@enduml